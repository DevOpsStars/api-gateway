# # Default values for booking-app.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

# replicaCount: 1

# image:
#   repository: nginx
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# podAnnotations: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# nodeSelector: {}

# tolerations: []

# affinity: {}

# values.yaml
user-service:
  appName: user-service
  namespace: user
  nodePort: 31001
  port: 8000

  image:
    name: mladenv7/user-service
    tag: v1.5.1

  postgresPort: 5432
  dbName: user_db
  postgresUser: "pera"
  postgresPassword: "pera"


lodging-service:
  appName: lodging-service
  namespace: lodging
  nodePort: 31002
  port: 8080

  image:
    name: mladenv7/lodging-service
    tag: v1.0.0-beta.4

  postgresPort: 5432
  dbName: lodging_db
  postgresUser: "pera"
  postgresPassword: "pera"


booking-service:
  appName: booking-service
  namespace: booking
  nodePort: 31003
  port: 8080

  image:
    name: mladenv7/booking-service
    tag: v1.1.0-beta.8
  
  mongodbPort: 27017
  dbName: booking_db
  mongodbHost: mongodb
  mongodbUser: "pera1"
  mongodbPassword: "pera1"

# rating-service:
#   image: mladenv7/rating-service:latest
